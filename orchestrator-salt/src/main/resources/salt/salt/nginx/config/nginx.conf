user  nginx;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_processes  2;

events {
    worker_connections  1024;
    multi_accept on;
}

http {
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  30;
    keepalive_requests 100;

    proxy_buffering  off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;

    gzip              on;
    gzip_http_version 1.1;
    gzip_comp_level   6;
    gzip_proxied      any;
    gzip_vary         on;
    gzip_buffers      16 8k;
    gzip_types        text/plain text/css text/xml text/javascript application/json application/x-javascript application/xml application/xml+rss;
    gzip_min_length   1000;
    gzip_disable      "MSIE [1-6]\.";

    variables_hash_max_size 1024;
    variables_hash_bucket_size 64;

    types_hash_max_size 2048;
    types_hash_bucket_size 64;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server_tokens off;

    upstream ambari {
        server 127.0.0.1:8080;
    }

    upstream saltboot {
        server 127.0.0.1:7070;
    }

    upstream saltapi {
        server 127.0.0.1:3080;
    }

    upstream prometheus {
        server 127.0.0.1:9090;
    }

    server {
        listen                1080;

        rewrite ^([^/]*/ambari)$ $1/ permanent;

        location ~ /exporter/(.*) {
            proxy_pass         http://127.0.0.1:$1;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location ~ /prometheus {
            proxy_pass         http://prometheus;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }

    {% if 'ambari_server' in salt['grains.get']('roles') %}
    server {
        listen               443 ssl;

        ssl_certificate      /etc/certs/server.pem;
        ssl_certificate_key  /etc/certs/server-key.pem;

        rewrite ^([^/]*/ambari)$ $1/ permanent;

        # e.g.: https://172.22.107.133/img/white-logo.png -> https://172.22.107.133/ambari/img/white-logo.png
        if ($http_referer ~ .*/ambari/.*) {
            rewrite ^([/](?!ambari/).*$) /ambari$1;
        }

        if ($cookie_AMBARISESSIONID ~ .+) {
            rewrite ^([/](?!ambari/).*$) /ambari$1;
        }

        location ~ .*/ambari/(.*) {
            proxy_pass         http://ambari/$1$is_args$args;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }

    #example curl for testing:
    #curl --verbose --key stack-81/key.pem --cert stack-81/cert.pem -k --user "user:password" -H "Accept: application/json" https://104.155.27.67:9443/saltboot/health
    server {
        listen                 9443 ssl;

        ssl_certificate        /etc/certs/server.pem;
        ssl_certificate_key    /etc/certs/server-key.pem;
        ssl_client_certificate /etc/certs/cb-client.pem;
        ssl_verify_client      on;

        location / {
            proxy_pass         http://ambari;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /saltboot {
            proxy_pass         http://saltboot;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location ~ /saltapi/(?<section>.*) {
            proxy_pass         http://saltapi/$section$is_args$args;
            proxy_read_timeout 300;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
    {% endif %}
}